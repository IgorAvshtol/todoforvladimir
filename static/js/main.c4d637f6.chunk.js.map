{"version":3,"sources":["component/Box.module.css","store/tasks-reducer.tsx","component/Task.tsx","component/TasksForm.tsx","component/Box.tsx","component/TaskFormContainer.tsx","App.tsx","reportWebVitals.ts","store/store.tsx","index.tsx","component/Task.module.css"],"names":["module","exports","TypeKeys","initialState","tasks","id","v1","task","isDone","Task","props","useDrag","type","collect","monitor","isDragging","dragRef","ref","className","classes","mainForMovable","main","name","value","title","onChange","onChangeHandler","input1","btnAdd","onClick","addTask","error","errorMessage","FilterTasks","map","t","taskStyle","checked","e","onChangeCheckboxHandler","onClickChangeCheckboxHandler","btnDelete","deleteTask","allBtnStyle","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler","TasksForm","dispatch","useDispatch","deleteTaskFromRedux","taskId","DELETE_TASK","useState","setTitle","setError","filter","setFilter","tasksForTodolist","useSelector","state","trim","ADD_TASK","currentTarget","newIsDoneValue","CHANGE_TASK_STATUS","Box","card","moveCard","useDrop","accept","drop","isOver","dropRef","box","style","backgroundColor","TaskFormContainer","index","setIndex","i","allStyle","bind","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","s","stateCopy","find","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4d637f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allStyle\":\"Box_allStyle__3y54k\",\"box\":\"Box_box__2mKmN\"};","import {v1} from \"uuid\";\r\n\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    task: string\r\n    isDone: boolean\r\n\r\n}\r\n\r\nexport type TasksType = {\r\n    tasks: TaskType[]\r\n}\r\n\r\nenum TypeKeys {\r\n    ADD_TASK = \"ADD-TASK\",\r\n    DELETE_TASK = \"DELETE-TASK\",\r\n    CHANGE_TASK_STATUS = \"CHANGE-TASK-STATUS\"\r\n}\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\"\r\n\r\nconst initialState: TasksType = {\r\n    tasks:\r\n        [\r\n            {id: v1(), task: \"\", isDone: false}\r\n        ]\r\n}\r\n\r\nexport const tasksReducer = (state: TasksType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case TypeKeys.ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, {id: v1(), task: action.task}]\r\n            }\r\n        }\r\n        case TypeKeys.DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks.filter((s) => s.id !== action.taskId)]\r\n            }\r\n        }\r\n        case TypeKeys.CHANGE_TASK_STATUS: {\r\n            const stateCopy = {...state};\r\n            let task = stateCopy.tasks.find(t => t.id === action.taskId);\r\n            if (task) {\r\n                task.isDone = action.isDone;\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\ntype ActionsType = AddTaskActionType | DeleteTaskActionType | ChangeTaskStatusActionType\r\n\r\nexport type AddTaskActionType = {\r\n    type: TypeKeys.ADD_TASK\r\n    task: string\r\n}\r\n\r\nexport type DeleteTaskActionType = {\r\n    type: TypeKeys.DELETE_TASK\r\n    taskId: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: TypeKeys.CHANGE_TASK_STATUS\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type FilterTasksActionType = {\r\n    type: 'FILTER-TASKS'\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport const addTaskAC = (task: string): AddTaskActionType => {\r\n    return {type: TypeKeys.ADD_TASK, task}\r\n}\r\n\r\nexport const deleteTaskAC = (taskId: string): DeleteTaskActionType => {\r\n    return {type: TypeKeys.DELETE_TASK, taskId}\r\n}\r\n\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean) => {\r\n    return {type: TypeKeys.CHANGE_TASK_STATUS, taskId, isDone}\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { TaskType } from \"../store/tasks-reducer\";\r\nimport classes from \"./Task.module.css\";\r\nimport { useDrag } from \"react-dnd\";\r\n\r\ntype TaskFormType = {\r\n    onAllClickHandler: () => void;\r\n    onActiveClickHandler: () => void;\r\n    onCompletedClickHandler: () => void;\r\n    FilterTasks: () => Array<TaskType>;\r\n    addTask: () => void;\r\n    deleteTask: (id: string) => void;\r\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void;\r\n    onChangeCheckboxHandler: (id: string, e: ChangeEvent<HTMLInputElement>) => void;\r\n    title: string;\r\n    error: string\r\n}\r\n\r\n\r\nexport function Task(props: TaskFormType) {\r\n\r\n    const [{isDragging}, dragRef] = useDrag({\r\n        type: \"card\",\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const onClickDeleteTask = (id: string) => {\r\n        props.deleteTask(id)\r\n    }\r\n\r\n    const onClickChangeCheckboxHandler = (id: string, e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeCheckboxHandler(id, e)\r\n    }\r\n\r\n\r\n    return (\r\n        <div ref={dragRef} className={isDragging ? classes.mainForMovable : classes.main}>\r\n            <b>Tasks:</b>\r\n            <div>\r\n                <input name={\"Tasks\"}\r\n                       value={props.title}\r\n                       onChange={props.onChangeHandler}\r\n                       className={classes.input1}\r\n                />\r\n                <button className={classes.btnAdd} onClick={props.addTask}>+</button>\r\n                {props.error && <div className={classes.errorMessage}>{props.error}</div>}\r\n            </div>\r\n            <div>\r\n                {\r\n                    props.FilterTasks().map((t) => {\r\n                            if (t.task) {\r\n                                return <div key={t.id} className={classes.taskStyle}>\r\n                                    <p>{t.task}\r\n                                        <input type={\"checkbox\"} checked={t.isDone || false}\r\n                                               onChange={(e) => onClickChangeCheckboxHandler(t.id, e)}\r\n                                        />\r\n                                        <button className={classes.btnDelete} onClick={() => onClickDeleteTask(t.id)}>-\r\n                                        </button>\r\n                                    </p>\r\n                                </div>\r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n                <div className={classes.allBtnStyle}>\r\n                    <button onClick={props.onAllClickHandler}>All</button>\r\n                    <button onClick={props.onActiveClickHandler}>Active</button>\r\n                    <button onClick={props.onCompletedClickHandler}>Completed</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStateType } from \"../store/store\";\r\nimport {\r\n    addTaskAC,\r\n    changeTaskStatusAC,\r\n    deleteTaskAC,\r\n    FilterValuesType,\r\n    TasksType,\r\n    TaskType\r\n} from \"../store/tasks-reducer\";\r\nimport { Task } from \"./Task\";\r\n\r\n\r\nexport function TasksForm() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteTaskFromRedux = (id: string) => {\r\n        dispatch(deleteTaskAC(id))\r\n    }\r\n\r\n    const [title, setTitle] = useState<string>(\"\")\r\n\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n    const addTask = () => {\r\n        if (title.trim() !== \"\") {\r\n            dispatch(addTaskAC(title.trim()))\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const deleteTask = (id: string) => {\r\n        deleteTaskFromRedux(id)\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(\"\")\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeCheckboxHandler = (id: string, e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        dispatch(changeTaskStatusAC(id, newIsDoneValue))\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let tasksForTodolist = useSelector<AppRootStateType, TasksType>(state => state.tasks);\r\n\r\n    function FilterTasks(): TaskType[] {\r\n\r\n        if (filter === \"active\") {\r\n            return tasksForTodolist.tasks.filter(t => !t.isDone);\r\n        }\r\n        if (filter === \"completed\") {\r\n            return tasksForTodolist.tasks.filter(t => t.isDone);\r\n        }\r\n        return tasksForTodolist.tasks\r\n    }\r\n\r\n\r\n    const onAllClickHandler = () => {\r\n        setFilter(\"all\")\r\n    }\r\n\r\n    const onActiveClickHandler = () => {\r\n        setFilter(\"active\")\r\n    }\r\n\r\n    const onCompletedClickHandler = () => {\r\n        setFilter(\"completed\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Task onAllClickHandler={onAllClickHandler}\r\n                  onActiveClickHandler={onActiveClickHandler}\r\n                  onCompletedClickHandler={onCompletedClickHandler}\r\n                  FilterTasks={FilterTasks}\r\n                  addTask={addTask}\r\n                  deleteTask={deleteTask}\r\n                  onChangeHandler={onChangeHandler}\r\n                  onChangeCheckboxHandler={onChangeCheckboxHandler}\r\n                  title={title}\r\n                  error={error}\r\n            />\r\n        </div>\r\n    )\r\n}","import { useDrop } from \"react-dnd\";\r\nimport { TasksForm } from \"./TasksForm\";\r\nimport classes from \"./Box.module.css\"\r\n\r\nexport function Box({card, moveCard}: any) {\r\n    const [{isOver}, dropRef] = useDrop({\r\n        accept: \"card\",\r\n        drop: () => moveCard(),\r\n        collect: (monitor) => ({\r\n            isOver: !monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={classes.box}\r\n            ref={dropRef}\r\n            style={{\r\n                backgroundColor: isOver ? \"white\" : \"white\"\r\n            }}\r\n        >\r\n            {card ? <TasksForm/> : \"\"}\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Box } from \"./Box\";\r\nimport classes from \"./Box.module.css\"\r\n\r\nexport function TaskFormContainer() {\r\n    const [index, setIndex] = useState(3);\r\n\r\n    function moveCard(i: number) {\r\n        setIndex(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.allStyle} >\r\n            <Box card={index === 1} moveCard={moveCard.bind(null, 1)}></Box>\r\n            <Box card={index === 2} moveCard={moveCard.bind(null, 2)}></Box>\r\n            <Box card={index === 3} moveCard={moveCard.bind(null, 3)}></Box>\r\n            <Box card={index === 4} moveCard={moveCard.bind(null, 4)}></Box>\r\n            <Box card={index === 5} moveCard={moveCard.bind(null, 5)}></Box>\r\n            <Box card={index === 6} moveCard={moveCard.bind(null, 6)}></Box>\r\n            <Box card={index === 7} moveCard={moveCard.bind(null, 7)}></Box>\r\n            <Box card={index === 8} moveCard={moveCard.bind(null, 8)}></Box>\r\n            <Box card={index === 9} moveCard={moveCard.bind(null, 9)}></Box>\r\n            <Box card={index === 10} moveCard={moveCard.bind(null, 10)}></Box>\r\n            <Box card={index === 11} moveCard={moveCard.bind(null, 11)}></Box>\r\n            <Box card={index === 12} moveCard={moveCard.bind(null, 12)}></Box>\r\n            <Box card={index === 13} moveCard={moveCard.bind(null, 13)}></Box>\r\n            <Box card={index === 14} moveCard={moveCard.bind(null, 14)}></Box>\r\n            <Box card={index === 15} moveCard={moveCard.bind(null, 15)}></Box>\r\n            <Box card={index === 16} moveCard={moveCard.bind(null, 16)}></Box>\r\n            <Box card={index === 17} moveCard={moveCard.bind(null, 17)}></Box>\r\n            <Box card={index === 18} moveCard={moveCard.bind(null, 18)}></Box>\r\n            <Box card={index === 19} moveCard={moveCard.bind(null, 19)}></Box>\r\n            <Box card={index === 20} moveCard={moveCard.bind(null, 20)}></Box>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport \"./App.css\";\nimport { TaskFormContainer } from \"./component/TaskFormContainer\";\n\n\nfunction App() {\n    return (\n        <div className='App'>\n            <DndProvider backend={HTML5Backend}>\n                <TaskFormContainer/>\n            </DndProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\r\nimport { tasksReducer } from \"./tasks-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks: tasksReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\n\nReactDOM.render(<Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Task_main__1ndkc\",\"mainForMovable\":\"Task_mainForMovable__2Y2P2\",\"allBtnStyle\":\"Task_allBtnStyle__2JpzL\",\"btnDelete\":\"Task_btnDelete__3kqTA\",\"btnAdd\":\"Task_btnAdd__3mS0G\",\"input1\":\"Task_input1__2B_zx\",\"taskStyle\":\"Task_taskStyle__1O4m_\",\"errorMessage\":\"Task_errorMessage__3exjc\"};"],"sourceRoot":""}